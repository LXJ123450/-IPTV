try{	
	var urlParams = XEpg.Util.getUrlParameterObj(document.URL);//获取记录地址里的参数对象	
	var phoneNum = XEpg.Util.getUrlParam(document.URL, "phoneNum"); 
	var topsetid = XEpg.Util.getUrlParam(document.URL, "topsetid");
	console.log("urlParams:"+urlParams);
	console.log("phoneNum:"+phoneNum);
	console.log("topsetid:"+topsetid);
	var initData = null;
	var dynamicData = null;
	var taskid = null;
	var gameid = null;
	var prizeGrp = null;

	// 页面抽奖用户滚动动画
	var cWinnerUser = null;
	var cwinnerUsers = null;
	var cwinnerUsers2 = null;

}catch(e){
	console.log("error:"+e.message);
}

function winnerRoll(){	
	if(cwinnerUsers2.offsetTop - cWinnerUser.scrollTop <= 0){
		cWinnerUser.scrollTop -= cwinnerUsers.offsetHeight;
	}else{
		cWinnerUser.scrollTop++;
	}
}

window.onload=function()
{

	cWinnerUser = document.getElementById("cardsWinnerUser");
	cwinnerUsers = document.getElementById("cardswinnerUsers");
	cwinnerUsers2 = document.getElementById("cardswinnerUsers2");
	XEpg.Util.setCookie("topsetid", topsetid);
	XEpg.Util.setCookie("phoneNum", phoneNum);
	var url = './happytv/user/' + phoneNum + '/game';
	var content = 'username=' + phoneNum;
	initGame(url, content);

	document.getElementById("version").innerHTML = 'version:0.9.1 url: ' + document.URL;
	
	cwinnerUsers2.innerHTML = cwinnerUsers.innerHTML;
	
	var cardsWinnerTimer=setInterval(winnerRoll,30);
	// 手机号码替换
	// 获取所有手机号码
	var phoneArr=document.querySelectorAll("span.phoneNum");
	for(var i=0; i<phoneArr.length;i++){
			phoneArr[i].innerHTML=phoneArr[i].innerHTML.substr(0,3)+"****"+phoneArr[i].innerHTML.substr(7);
	}
}


function initGame(url, content)
{
	XEpg.Util.ajaxPost(url, content, function(e)
	{
		var res = JSON.parse(e);
		console.log(res);		
		if(res.code == 0)
		{
			initData = res.data;
			gameid = initData.game.id;
			document.getElementById("totalChance").innerHTML = 10 - res.data.userChance.gameChance
			document.getElementById("remainChance").innerHTML = res.data.userChance.gameChance
		}else if(res.code == 205){
			document.getElementById("gameOver").style.display = 'block';
		}else{
			initData = null;
			console.log("res.msg:"+res.msg);
		}
	});
}

/**
 * 翻牌
 * @param {卡牌序号 1-9}} num 
 */
function noNetWorkflop(num)
{	
	setRowCol(num);	
	changeFocus();
	switch(num){
		case 1:			
			showEnlargeResult(1);
			break;
		case 2:			
			showEnlargeResult(2);
			break;
		case 3:			
			showEnlargeResult(3);
			break;
		case 4:			
			showEnlargeResult(4);
			break;
		case 5:			
			showEnlargeResult(0);
			break;
		case 6:			
			showEnlargeResult(1);
			break;
		case 7:			
			showEnlargeResult(2);
			break;
		case 8:			
			showEnlargeResult(3);
			break;
		case 9:			
			showEnlargeResult(4);
			break;
		default:
			break;
	}
	return;		
	switch(num){				
		case 1:
			document.getElementById('card_1_info').innerHTML = 	getCardInfo (1);	
			document.getElementById('card_1_btn').innerHTML =  getBtnText (1);
			
			document.getElementById('card_1_back').style.display = 'none';
			document.getElementById('card_1_result').style.display = 'block';
			showEnlargeResult(1);
			break;
		case 2:
			document.getElementById('card_2_info').innerHTML = 	getCardInfo (2);	
			document.getElementById('card_2_btn').innerHTML =  getBtnText (2);
			
			document.getElementById('card_2_back').style.display = 'none';
			document.getElementById('card_2_result').style.display = 'block';
			showEnlargeResult(2);
			break;
		case 3:
			document.getElementById('card_3_info').innerHTML = 	getCardInfo (3);	
			document.getElementById('card_3_btn').innerHTML =  getBtnText (3);
			
			document.getElementById('card_3_back').style.display = 'none';
			document.getElementById('card_3_result').style.display = 'block';
			showEnlargeResult(3);
			break;
		case 4:
			document.getElementById('card_4_info').innerHTML = 	getCardInfo (4);	
			document.getElementById('card_4_btn').innerHTML =  getBtnText (4);
			
			document.getElementById('card_4_back').style.display = 'none';
			document.getElementById('card_4_result').style.display = 'block';
			showEnlargeResult(4);
			break;
		case 5:
			document.getElementById('card_5_info').innerHTML = 	getCardInfo (0);	
			document.getElementById('card_5_btn').innerHTML =  getBtnText (0);
			
			document.getElementById('card_5_back').style.display = 'none';
			document.getElementById('card_5_result').style.display = 'block';
			showEnlargeResult(0);
			break;
		case 6:
			document.getElementById('card_6_info').innerHTML = 	getCardInfo (1);	
			document.getElementById('card_6_btn').innerHTML =  getBtnText (1);
			
			document.getElementById('card_6_back').style.display = 'none';
			document.getElementById('card_6_result').style.display = 'block';
			showEnlargeResult(1);
			break;
		case 7:
			document.getElementById('card_6_info').innerHTML = 	getCardInfo (2);	
			document.getElementById('card_6_btn').innerHTML =  getBtnText (2);

			document.getElementById('card_7_back').style.display = 'none';
			document.getElementById('card_7_result').style.display = 'block';
			showEnlargeResult(2);
			break;
		case 8:
			document.getElementById('card_8_info').innerHTML = 	getCardInfo (3);	
			document.getElementById('card_8_btn').innerHTML =  getBtnText (3);	

			document.getElementById('card_8_back').style.display = 'none';
			document.getElementById('card_8_result').style.display = 'block';
			showEnlargeResult(3);
			break;
		case 9:
			document.getElementById('card_9_info').innerHTML = 	getCardInfo (4);	
			document.getElementById('card_9_btn').innerHTML =  getBtnText (4);	

			document.getElementById('card_9_back').style.display = 'none';
			document.getElementById('card_9_result').style.display = 'block';
			showEnlargeResult(4);
			break;
		default:
			break;
	}
	changeFocus();	
}

/**
 * 翻牌
 * @param {卡牌序号 1-9}} num 
 */
function flop(num)
{	
	setRowCol(num);	
	//var url = './happytv/user/' + 13512345678 + '/game/' + initData.game.id + '/poker/' + (num - 1)
	var url = './happytv/user/' + phoneNum + '/game/' + initData.game.id + '/poker/' + (num - 1)

	var content = ''
	XEpg.Util.ajaxPost(url, content, function(e)
	{
		var res = JSON.parse(e);
		console.log("res:"+JSON.stringify(res));
		if(res.code == 0)
		{	
			dynamicData = res.data;
			taskid = dynamicData.game.pokers[num -1].task;
			prizeGrp = dynamicData.prize[num -1].grp;
			showResult(num);
			
		}else if(res.code == 204){
			//XEpg.Util.gotoPage(getTargetUrl(dynamicData.game.pokers[num -1].type));	
		}else{
			console.log("res.msg:" + res.msg);			
		}
	});	
}


/**
 * 
 * @param {翻牌结果类型} type 
 */
function showEnlargeResult(type){
	switch(type){
		case 0:
			document.getElementById('result-Info').style.display = 'block';
			document.getElementById('card_result').innerHTML = 	getCardInfo (type);	
			document.getElementById('result-btn').innerHTML =  getBtnText (type);
			document.getElementById('result-other').style.display = 'block';
			break;
		case 1:		   
			document.getElementById('result-Info').style.display = 'block';
			document.getElementById('card_result').innerHTML = 	getCardInfo (type);	
			document.getElementById('result-btn').innerHTML =  getBtnText (type);
			document.getElementById('result-other').style.display = 'block';
			break;
		case 2:
			document.getElementById('result-Info').style.display = 'block';
			document.getElementById('card_result').innerHTML = 	getCardInfo (type);	
			document.getElementById('result-btn').innerHTML =  getBtnText (type);
			document.getElementById('result-other').style.display = 'block';
			break;
		case 3:
			document.getElementById('result-Info').style.display = 'block';
			document.getElementById('card_result').innerHTML = 	getCardInfo (type);	
			document.getElementById('result-btn').innerHTML =  getBtnText (type);
			document.getElementById('result-other').style.display = 'block';
			break;
		case 4:
			document.getElementById('result-Info').style.display = 'block';
			document.getElementById('card_result').innerHTML = 	getCardInfo (type);	
			document.getElementById('result-btn').innerHTML =  getBtnText (type);
			document.getElementById('result-other').style.display = 'block';
			break;
	}
	curFlopType = type;
	isFloped = true;
}

/**
 * cardrow 1 - 3
 * cardcol 1 - 3
 * cardindex (1 - 9)
 */
function getCardIndex(){
	var index = (cardrow - 1) * 3 + cardcol;
	return index;
}
/**
 * 设置卡牌坐标索引值
 * @param {按键数} num 
 */
function setRowCol(num){
	switch(num){
		case 1:
			cardrow = 1;
			cardcol = 1;
			break;
		case 2:
			cardrow = 1;
			cardcol = 2;
			break;
		case 3:
			cardrow = 1;
			cardcol = 3;
			break;
		case 4:
			cardrow = 2;
			cardcol = 1;
			break;
		case 5:
			cardrow = 2;
			cardcol = 2;
			break;
		case 6:
			cardrow = 2;
			cardcol = 3;
			break;
		case 7:
			cardrow = 3;
			cardcol = 1;
			break;
		case 8:
			cardrow = 3;
			cardcol = 2;
			break;
		case 9:
			cardrow = 3;
			cardcol = 3;
			break;
	}
}
/**
 * 消除卡牌焦点
 */
function clearFocus(){
	document.getElementById('card_1').className  = 'item';
	document.getElementById('card_2').className  = 'item';
	document.getElementById('card_3').className  = 'item';
	document.getElementById('card_4').className  = 'item';
	document.getElementById('card_5').className  = 'item';
	document.getElementById('card_6').className  = 'item';
	document.getElementById('card_7').className  = 'item';
	document.getElementById('card_8').className  = 'item';
	document.getElementById('card_9').className  = 'item';
}

/**
 * 改变卡牌焦点
 */

function changeFocus(){
	if(isFloped == true)
	{
		return;
	}
	clearFocus();
	var index = (cardrow - 1) * 3 + cardcol;
	switch(index){
		case 1:
			document.getElementById('card_1').className  = 'item cardBorder';
			break;
		case 2:
			document.getElementById('card_2').className  = 'item cardBorder';
			break;
		case 3:
			document.getElementById('card_3').className  = 'item cardBorder';
			break;
		case 4:
			document.getElementById('card_4').className  = 'item cardBorder';
			break;
		case 5:
			document.getElementById('card_5').className  = 'item cardBorder';
			break;
		case 6:
			document.getElementById('card_6').className  = 'item cardBorder';
			break;
		case 7:
			document.getElementById('card_7').className  = 'item cardBorder';
			break;
		case 8:
			document.getElementById('card_8').className  = 'item cardBorder';
			break;
		case 9:
			document.getElementById('card_9').className  = 'item cardBorder';
			break;
	}
}

/**
 * 获取翻牌信息文本
 * @param {类型代码} type 
 */
function getCardInfo(type){
	var str = '';
	switch(type){
		case 0:
			str = "未知";
			break;
		case 1:
			str = "耐心观看广告，可获得一次抽奖机会!";
			break;
		case 2:
			str = "完整观看视频，可获得一次抽奖机会!";
			break;
		case 3:
			str = "参与答题，回答正确可抽奖哦!";
			break;
		case 4:
			str = "恭喜您获得一次抽奖机会！";
			break;
	}
    return str;
}


/**
 * 获取跳转URL
 * @param {类型代码} type 
 */
function getTargetUrl(type){
	var str = '';
	switch(type){
		case 0:
			str = "cards.html?" + "username=" + phoneNum + "&taskid=" + taskid + "&prize=" + prizeGrp;
			break;
		case 1:
			str = "advert.html?" + "username=" + phoneNum + "&taskid=" + taskid + "&prize=" + prizeGrp;
			break;2
		case 2:
			str = "player.html?" + "username=" + phoneNum + "&taskid=" + taskid + "&prize=" + prizeGrp;
			break;
		case 3:
			str = "question.html?" + "username=" + phoneNum + "&taskid=" + taskid + "&prize=" + prizeGrp;
			break;
		case 4:
			str = "Lottery.html?" + "username=" +  phoneNum + "&taskid=" + taskid + "&prize=" + prizeGrp;
			break;
	}
    return str;
}

/**
 * 获取按纽文本
 * @param {类型代码} type 
 */
function getBtnText(type){
	var str = '';
	switch(type){
		case 0:
			str = "无法确认";
			break;
		case 1:
			str = "点击播放";
			break;
		case 2:
			str = "点击播放";
			break;
		case 3:
			str = "点击答题";
			break;
		case 4:
			str = "点击抽奖";
			break;
	}
    return str;
}

/**
 * 
 * @param {牌索引} num 
 */
function showResult(num)
{
	changeFocus();
	showEnlargeResult(dynamicData.game.pokers[num -1].type);
	return;
	switch(num){
		case 1:
			document.getElementById('card_1_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_1_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);

			document.getElementById('card_1_back').style.display = 'none';
			document.getElementById('card_1_result').style.display = 'block';
			break;
		case 2:
			document.getElementById('card_2_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_2_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);

			document.getElementById('card_2_back').style.display = 'none';
			document.getElementById('card_2_result').style.display = 'block';
			break;
		case 3:
			document.getElementById('card_3_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_3_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);
			
			document.getElementById('card_3_back').style.display = 'none';
			document.getElementById('card_3_result').style.display = 'block';
			break;
		case 4:
			document.getElementById('card_4_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_4_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);
			
			document.getElementById('card_4_back').style.display = 'none';
			document.getElementById('card_4_result').style.display = 'block';
			break;
		case 5:
			document.getElementById('card_5_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_5_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);
			
			document.getElementById('card_5_back').style.display = 'none';
			document.getElementById('card_5_result').style.display = 'block';
			break;
		case 6:
			document.getElementById('card_6_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_6_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);
			
			document.getElementById('card_6_back').style.display = 'none';
			document.getElementById('card_6_result').style.display = 'block';
			break;
		case 7:
			document.getElementById('card_6_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_6_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);

			document.getElementById('card_7_back').style.display = 'none';
			document.getElementById('card_7_result').style.display = 'block';
			break;
		case 8:
			document.getElementById('card_8_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_8_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);	

			document.getElementById('card_8_back').style.display = 'none';
			document.getElementById('card_8_result').style.display = 'block';
			break;
		case 9:
			document.getElementById('card_9_info').innerHTML = 	getCardInfo (dynamicData.game.pokers[num -1].type);	
			document.getElementById('card_9_btn').innerHTML =  getBtnText (dynamicData.game.pokers[num -1].type);	

			document.getElementById('card_9_back').style.display = 'none';
			document.getElementById('card_9_result').style.display = 'block';
			break;
		default:
			break;
	}
	changeFocus();
	showEnlargeResult(dynamicData.game.pokers[num -1].type);
}



